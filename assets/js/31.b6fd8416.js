(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{319:function(v,_,i){"use strict";i.r(_);var l=i(6),a=Object(l.a)({},(function(){var v=this,_=v.$createElement,i=v._self._c||_;return i("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[i("h2",{attrs:{id:"技术变现"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#技术变现"}},[v._v("#")]),v._v(" 技术变现")]),v._v(" "),i("p",[v._v("不应该将时间浪费在无尽的功能上。")]),v._v(" "),i("p",[v._v("技能变现：")]),v._v(" "),i("ol",[i("li",[v._v("先有一个个小的成功")]),v._v(" "),i("li",[v._v("关注有价值的东西\n"),i("ol",[i("li",[v._v("关注市场需求")]),v._v(" "),i("li",[v._v("关注技术趋势")])])]),v._v(" "),i("li",[v._v("找到能体现价值的地方")]),v._v(" "),i("li",[v._v("提高动手能力")]),v._v(" "),i("li",[v._v("关注技术付费点\n"),i("ol",[i("li",[v._v("能帮别人“挣钱”")]),v._v(" "),i("li",[v._v("能帮别人“省钱”")])])]),v._v(" "),i("li",[v._v("提升自己的能力和经历")]),v._v(" "),i("li",[v._v("找到有价值的信息源")]),v._v(" "),i("li",[v._v("输出观点和价值观")]),v._v(" "),i("li",[v._v("朋友圈很重要")])]),v._v(" "),i("h2",{attrs:{id:"安全"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#安全"}},[v._v("#")]),v._v(" 安全")]),v._v(" "),i("p",[v._v("数据泄露的一般原因：")]),v._v(" "),i("ol",[i("li",[v._v("利用程序框架或者库的已知漏洞")]),v._v(" "),i("li",[v._v("暴力破解密码")]),v._v(" "),i("li",[v._v("代码注入")]),v._v(" "),i("li",[v._v("利用程序日志不小心泄露信息")]),v._v(" "),i("li",[v._v("社会工程学")])]),v._v(" "),i("p",[v._v("数据管理上可能出现的问题：")]),v._v(" "),i("ol",[i("li",[v._v("只有一层安全")]),v._v(" "),i("li",[v._v("弱密码")]),v._v(" "),i("li",[v._v("向公网暴露了内部系统")]),v._v(" "),i("li",[v._v("怼系统技术打安全补丁")]),v._v(" "),i("li",[v._v("安全日志被暴露")]),v._v(" "),i("li",[v._v("保存了不必要的保存的用户数据")]),v._v(" "),i("li",[v._v("密码没有合理的被散列")])]),v._v(" "),i("p",[v._v("避免安全问题的最佳实践：")]),v._v(" "),i("ol",[i("li",[v._v("时刻追踪所使用软件的产品版本和最新的安全声明")]),v._v(" "),i("li",[v._v("建立一个流程快速地部署带有安全补丁的软件产品发布")]),v._v(" "),i("li",[v._v("认识到所有复杂软件都有漏洞")]),v._v(" "),i("li",[v._v("建立多个安全层")]),v._v(" "),i("li",[v._v("针对公网资源，建立怼异常访问模式的监控机制")])]),v._v(" "),i("p",[v._v("技术上的安全做法：")]),v._v(" "),i("ol",[i("li",[v._v("隔离关键数据")]),v._v(" "),i("li",[v._v("密钥要做到随机生成，最好是针对不同用户的数据有不同的密钥，并且能够自动化更新")])]),v._v(" "),i("h2",{attrs:{id:"技术领导力"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#技术领导力"}},[v._v("#")]),v._v(" 技术领导力")]),v._v(" "),i("h3",{attrs:{id:"拥有技术领导力"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#拥有技术领导力"}},[v._v("#")]),v._v(" 拥有技术领导力")]),v._v(" "),i("ol",[i("li",[v._v("要吃透基础技术\n"),i("ul",[i("li",[v._v("C 语言")]),v._v(" "),i("li",[v._v("编程范式")]),v._v(" "),i("li",[v._v("算法和数据结构")]),v._v(" "),i("li",[v._v("计算机系统原理")]),v._v(" "),i("li",[v._v("操作系统原理和基础")]),v._v(" "),i("li",[v._v("网络基础")]),v._v(" "),i("li",[v._v("数据库原理")]),v._v(" "),i("li",[v._v("分布式技术架构")])])]),v._v(" "),i("li",[v._v("提高学习能力")]),v._v(" "),i("li",[v._v("坚持做正确的事情\n"),i("ul",[i("li",[v._v("提高效率的事")]),v._v(" "),i("li",[v._v("自动化的事")]),v._v(" "),i("li",[v._v("掌握前沿技术")]),v._v(" "),i("li",[v._v("知识密集型的事")]),v._v(" "),i("li",[v._v("技术驱动的事")])])]),v._v(" "),i("li",[v._v("高标准要求自己")])]),v._v(" "),i("h3",{attrs:{id:"书单"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#书单"}},[v._v("#")]),v._v(" 书单")]),v._v(" "),i("ul",[i("li",[v._v("代码大全")]),v._v(" "),i("li",[v._v("程序员的修炼之道")]),v._v(" "),i("li",[v._v("计算机的构造和解释")]),v._v(" "),i("li",[v._v("算法导论")]),v._v(" "),i("li",[v._v("设计模式")]),v._v(" "),i("li",[v._v("重构")]),v._v(" "),i("li",[v._v("人月神话")]),v._v(" "),i("li",[v._v("代码整洁之道")]),v._v(" "),i("li",[v._v("Effective C++ / More Effective C++")]),v._v(" "),i("li",[v._v("Unix 编程艺术 / Unix 高级环境编程")]),v._v(" "),i("li",[v._v("C++ 软件性能优化")]),v._v(" "),i("li",[v._v("Machine Learning is Fun!")]),v._v(" "),i("li",[v._v("C++ 语言的设计和演化")]),v._v(" "),i("li",[v._v("吴恩达的 Course 课程")]),v._v(" "),i("li",[v._v("Tom Mitchell 机器学习课程")]),v._v(" "),i("li",[v._v("Machine Learning 101")]),v._v(" "),i("li",[v._v("机器学习")])]),v._v(" "),i("p",[i("a",{attrs:{href:"https://www.agner.org/optimize/",target:"_blank",rel:"noopener noreferrer"}},[v._v("软件优化相关资料"),i("OutboundLink")],1)]),v._v(" "),i("h2",{attrs:{id:"leader"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#leader"}},[v._v("#")]),v._v(" Leader")]),v._v(" "),i("h3",{attrs:{id:"leader-需要的素质"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#leader-需要的素质"}},[v._v("#")]),v._v(" Leader 需要的素质")]),v._v(" "),i("ul",[i("li",[v._v("赢得他人的信任")]),v._v(" "),i("li",[v._v("开放心态 + 倾向的价值观")]),v._v(" "),i("li",[v._v("保持热情和冲劲")]),v._v(" "),i("li",[v._v("能够抓住重点，看透事物的本质")]),v._v(" "),i("li",[v._v("描绘令人激动的方向，提供令人向住的环境")]),v._v(" "),i("li",[v._v("甘当铺路石，为他人创造机会")])]),v._v(" "),i("h2",{attrs:{id:"编程"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#编程"}},[v._v("#")]),v._v(" 编程")]),v._v(" "),i("h3",{attrs:{id:"错误处理"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#错误处理"}},[v._v("#")]),v._v(" 错误处理")]),v._v(" "),i("ul",[i("li",[v._v("传统错误检查")]),v._v(" "),i("li",[v._v("多返回值")]),v._v(" "),i("li",[v._v("资源清理")]),v._v(" "),i("li",[v._v("异常捕捉处理")])]),v._v(" "),i("p",[v._v("可以参考的原则：")]),v._v(" "),i("ul",[i("li",[v._v("对于不期望发生的事情，我们可以使用异常捕捉")]),v._v(" "),i("li",[v._v("对于看恩纳个发生的事情，使用返回码")])]),v._v(" "),i("p",[v._v("可以参考的最佳实践：")]),v._v(" "),i("ul",[i("li",[v._v("统一分类的错误字典")]),v._v(" "),i("li",[v._v("同类错误定义最好可以扩展")]),v._v(" "),i("li",[v._v("定义错误的严重程度")]),v._v(" "),i("li",[v._v("错误日志的输出最好使用错误码，而不是错误信息")]),v._v(" "),i("li",[v._v("忽略错误最好有日志")]),v._v(" "),i("li",[v._v("同一个地方的错误最好打印一个错误及错误的次数")]),v._v(" "),i("li",[v._v("对已同类的错误，要用一样的模式")]),v._v(" "),i("li",[v._v("尽可能再错误发生的地方处理错误")]),v._v(" "),i("li",[v._v("在处理错误的时，总要清理已分配的资源")]),v._v(" "),i("li",[v._v("不推荐再循环体中处理错误")]),v._v(" "),i("li",[v._v("不要将大量代码放到"),i("code",[v._v("try")]),v._v("语句中")]),v._v(" "),i("li",[v._v("为定义的错误提供清楚的文档以及每种错误的代码示例")]),v._v(" "),i("li",[v._v("对于异步方式，推荐使用"),i("code",[v._v("Promise")])]),v._v(" "),i("li",[v._v("对于分布式系统，推荐使用"),i("code",[v._v("APM")]),v._v("相关软件")])]),v._v(" "),i("h3",{attrs:{id:"故障处理"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#故障处理"}},[v._v("#")]),v._v(" 故障处理")]),v._v(" "),i("p",[v._v("在故障发生时，最重要的是快速恢复故障，而快速恢复故障的前提是快速定位故障。")]),v._v(" "),i("p",[v._v("恢复系统的常用手段：")]),v._v(" "),i("ul",[i("li",[v._v("重启和限流")]),v._v(" "),i("li",[v._v("回滚操作")]),v._v(" "),i("li",[v._v("降级操作")]),v._v(" "),i("li",[v._v("紧急更新")])]),v._v(" "),i("p",[v._v("最重要的是降低故障造成的影响")]),v._v(" "),i("h3",{attrs:{id:"分布式"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#分布式"}},[v._v("#")]),v._v(" 分布式")]),v._v(" "),i("p",[v._v("使用分布式的两个主要原因：")]),v._v(" "),i("ol",[i("li",[v._v("增大系统容量")]),v._v(" "),i("li",[v._v("加强系统可用")])]),v._v(" "),i("h4",{attrs:{id:"亚马逊分布式的总结"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#亚马逊分布式的总结"}},[v._v("#")]),v._v(" 亚马逊分布式的总结")]),v._v(" "),i("ol",[i("li",[v._v("分布式服务的架构需要分布式的团队架构")]),v._v(" "),i("li",[v._v("分布式服务查错不容易")]),v._v(" "),i("li",[v._v("没有专职的测试人员，也没有专职的运维人员，开发人员做所有的事情")]),v._v(" "),i("li",[v._v("运维优先，崇尚简化和自动化")]),v._v(" "),i("li",[v._v("内部服务和外部服务一致")])]),v._v(" "),i("h4",{attrs:{id:"分布式系统中需要注意的问题"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#分布式系统中需要注意的问题"}},[v._v("#")]),v._v(" 分布式系统中需要注意的问题")]),v._v(" "),i("ol",[i("li",[v._v("异构系统的不标准问题")]),v._v(" "),i("li",[v._v("系统架构中的服务依赖问题")]),v._v(" "),i("li",[v._v("故障发生的概率更大")]),v._v(" "),i("li",[v._v("多层架构的运维复杂读更大")])]),v._v(" "),i("h4",{attrs:{id:"增强系统可用的方法"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#增强系统可用的方法"}},[v._v("#")]),v._v(" 增强系统可用的方法")]),v._v(" "),i("ul",[i("li",[v._v("大流量处理")]),v._v(" "),i("li",[v._v("关键业务保护")])]),v._v(" "),i("h4",{attrs:{id:"提高架构性能"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#提高架构性能"}},[v._v("#")]),v._v(" 提高架构性能")]),v._v(" "),i("ul",[i("li",[v._v("缓存系统")]),v._v(" "),i("li",[v._v("负载均衡")]),v._v(" "),i("li",[v._v("异步调用")]),v._v(" "),i("li",[v._v("数据镜像")]),v._v(" "),i("li",[v._v("数据分区")])]),v._v(" "),i("h4",{attrs:{id:"提高架构稳定性"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#提高架构稳定性"}},[v._v("#")]),v._v(" 提高架构稳定性")]),v._v(" "),i("ul",[i("li",[v._v("服务拆分")]),v._v(" "),i("li",[v._v("服务冗余")]),v._v(" "),i("li",[v._v("限流降级")]),v._v(" "),i("li",[v._v("高可用架构")]),v._v(" "),i("li",[v._v("高可用运维")])]),v._v(" "),i("h4",{attrs:{id:"分布式系统的关键技术"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#分布式系统的关键技术"}},[v._v("#")]),v._v(" 分布式系统的关键技术")]),v._v(" "),i("ul",[i("li",[v._v("服务治理")]),v._v(" "),i("li",[v._v("软件架构管理")]),v._v(" "),i("li",[v._v("DevOps")]),v._v(" "),i("li",[v._v("自动化运维")]),v._v(" "),i("li",[v._v("资源调度管理")]),v._v(" "),i("li",[v._v("整体架构监控")]),v._v(" "),i("li",[v._v("流量控制")])]),v._v(" "),i("h4",{attrs:{id:"分布式系统的五个关键技术"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#分布式系统的五个关键技术"}},[v._v("#")]),v._v(" 分布式系统的五个关键技术")]),v._v(" "),i("ul",[i("li",[v._v("全栈系统监控")]),v._v(" "),i("li",[v._v("服务 / 资源调度")]),v._v(" "),i("li",[v._v("流量调度")]),v._v(" "),i("li",[v._v("状态 / 数据调度")]),v._v(" "),i("li",[v._v("开发和运维自动化")])]),v._v(" "),i("h3",{attrs:{id:"监控"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#监控"}},[v._v("#")]),v._v(" 监控")]),v._v(" "),i("h4",{attrs:{id:"好的监控系统的特征"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#好的监控系统的特征"}},[v._v("#")]),v._v(" 好的监控系统的特征")]),v._v(" "),i("ul",[i("li",[v._v("关注于整体应用的 SLA")]),v._v(" "),i("li",[v._v("关联指标聚合")]),v._v(" "),i("li",[v._v("快速定位故障")])]),v._v(" "),i("h4",{attrs:{id:"好的监控系统的需要做的东西"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#好的监控系统的需要做的东西"}},[v._v("#")]),v._v(" 好的监控系统的需要做的东西")]),v._v(" "),i("ul",[i("li",[v._v("服务调用链跟踪")]),v._v(" "),i("li",[v._v("服务调用时长分布")]),v._v(" "),i("li",[v._v("服务的 Top N 视图")]),v._v(" "),i("li",[v._v("数据库操作关联")]),v._v(" "),i("li",[v._v("服务资源跟踪")])]),v._v(" "),i("h3",{attrs:{id:"服务调度"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#服务调度"}},[v._v("#")]),v._v(" 服务调度")]),v._v(" "),i("p",[v._v("微服务是服务依赖最优解的上限，而服务依赖的下限是千万不要优依赖环。")]),v._v(" "),i("h3",{attrs:{id:"流量调度"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#流量调度"}},[v._v("#")]),v._v(" 流量调度")]),v._v(" "),i("h4",{attrs:{id:"流量调度系统需要完成的事"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#流量调度系统需要完成的事"}},[v._v("#")]),v._v(" 流量调度系统需要完成的事")]),v._v(" "),i("ul",[i("li",[v._v("服务流控")]),v._v(" "),i("li",[v._v("流量控制")]),v._v(" "),i("li",[v._v("流量管理")])]),v._v(" "),i("h4",{attrs:{id:"流量调度的关键技术"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#流量调度的关键技术"}},[v._v("#")]),v._v(" 流量调度的关键技术")]),v._v(" "),i("ol",[i("li",[v._v("高性能")]),v._v(" "),i("li",[v._v("抗流量")]),v._v(" "),i("li",[v._v("业务逻辑")]),v._v(" "),i("li",[v._v("服务化")])]),v._v(" "),i("h4",{attrs:{id:"状态数据调度小结"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#状态数据调度小结"}},[v._v("#")]),v._v(" 状态数据调度小结")]),v._v(" "),i("ul",[i("li",[v._v("对于应用层上的分布式事务一致性，只有两阶段提交这样的方式")]),v._v(" "),i("li",[v._v("底层存储可用解决这个问题的方式是通过"),i("code",[v._v("Paxos")]),v._v("、"),i("code",[v._v("Raft")]),v._v("或"),i("code",[v._v("NWR")]),v._v("这样的算法和模型来解决")]),v._v(" "),i("li",[v._v("状态数据调度赢是由分布式存储系统来解决")])]),v._v(" "),i("h3",{attrs:{id:"故障"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#故障"}},[v._v("#")]),v._v(" 故障")]),v._v(" "),i("h4",{attrs:{id:"处理故障的准备工作"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#处理故障的准备工作"}},[v._v("#")]),v._v(" 处理故障的准备工作")]),v._v(" "),i("ul",[i("li",[v._v("建立一用户功能为索引的五福和资源全视图")]),v._v(" "),i("li",[v._v("为视图中的各个服务指定关键指标，以及一套运维流程和工具，包括应急方案")]),v._v(" "),i("li",[v._v("设定故障等级")]),v._v(" "),i("li",[v._v("故障演练")]),v._v(" "),i("li",[v._v("灰度发布系统")])]),v._v(" "),i("h4",{attrs:{id:"故障复盘文档（参考）"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#故障复盘文档（参考）"}},[v._v("#")]),v._v(" 故障复盘文档（参考）")]),v._v(" "),i("ul",[i("li",[v._v("故障处理的整个过程")]),v._v(" "),i("li",[v._v("故障原因分析")]),v._v(" "),i("li",[v._v("Ask 5 Why")]),v._v(" "),i("li",[v._v("故障后续整改计划")])]),v._v(" "),i("h4",{attrs:{id:"陈皓的总结的原则"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#陈皓的总结的原则"}},[v._v("#")]),v._v(" 陈皓的总结的原则")]),v._v(" "),i("ol",[i("li",[v._v("举一反三解决当下故障")]),v._v(" "),i("li",[v._v("简化复杂、不合理的技术架构、流程和组织")]),v._v(" "),i("li",[v._v("全面改善和优化整改系统，包括组织")])]),v._v(" "),i("h2",{attrs:{id:"机器学习"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#机器学习"}},[v._v("#")]),v._v(" 机器学习")]),v._v(" "),i("ul",[i("li",[v._v("监督式学习")]),v._v(" "),i("li",[v._v("非监督式学习")])]),v._v(" "),i("h2",{attrs:{id:"投资自己"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#投资自己"}},[v._v("#")]),v._v(" 投资自己")]),v._v(" "),i("p",[v._v("主动管理的不是你的时间，而是管理你的同事，管理你的信息")]),v._v(" "),i("p",[v._v("要学会说“不”")]),v._v(" "),i("h3",{attrs:{id:"投资自己的时间"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#投资自己的时间"}},[v._v("#")]),v._v(" 投资自己的时间")]),v._v(" "),i("ul",[i("li",[v._v("花时间学习基础知识，花时间读文档")]),v._v(" "),i("li",[v._v("花时间在解放自己的生存力的事情上")]),v._v(" "),i("li",[v._v("花时间在让自己成长的事上")]),v._v(" "),i("li",[v._v("花时间在建立高效的环境上")])]),v._v(" "),i("p",[v._v("一方面，兴趣是需要保持的。另一方面，兴趣其实也是可以培养出来的。")]),v._v(" "),i("p",[v._v("找到学习的方法，提升自己对新事物学习的能力，才是真正靠谱的")]),v._v(" "),i("p",[v._v("软件工程师的主要能力的体现：")]),v._v(" "),i("ol",[i("li",[v._v("提高服务的 SLA")]),v._v(" "),i("li",[v._v("能力和资源的冲用或复用")]),v._v(" "),i("li",[v._v("过程自动化")])]),v._v(" "),i("h2",{attrs:{id:"学习"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#学习"}},[v._v("#")]),v._v(" 学习")]),v._v(" "),i("p",[v._v("学习需要持续的付出，其会让人感到痛苦，并随时想找理由放弃")]),v._v(" "),i("p",[v._v("学习不是努力的读更多的书，盲目追求阅读的速度和质量，这会让人产生低层次的奋斗和成长的感觉。要思辨，要实践，要归纳总结，如果只是在机械地重复某件事情，而不会有质的成长的")]),v._v(" "),i("p",[v._v("学习的三个步骤：")]),v._v(" "),i("ul",[i("li",[v._v("知识采集")]),v._v(" "),i("li",[v._v("知识缝合")]),v._v(" "),i("li",[v._v("技能转换")])]),v._v(" "),i("p",[v._v("代码会告诉细节，书和文档是人对人说的话，代码是人对机器说的话。")]),v._v(" "),i("p",[v._v("理解代码的构造部分，大体如下：")]),v._v(" "),i("ol",[i("li",[v._v("接口抽象定义")]),v._v(" "),i("li",[v._v("模块粘合层")]),v._v(" "),i("li",[v._v("业务流程")]),v._v(" "),i("li",[v._v("具体实现\n"),i("ul",[i("li",[v._v("代码逻辑")]),v._v(" "),i("li",[v._v("出错处理")]),v._v(" "),i("li",[v._v("数据处理")]),v._v(" "),i("li",[v._v("重要的算法")]),v._v(" "),i("li",[v._v("底层交互")])])]),v._v(" "),i("li",[v._v("运行时调试")])]),v._v(" "),i("h2",{attrs:{id:"编程范式"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#编程范式"}},[v._v("#")]),v._v(" 编程范式")]),v._v(" "),i("p",[v._v("编程范式的英语是 programming paradigm，范即模范之意，范式即模式、方法，是一类典型的编程风格，是指从事软件工程的一类典型的风格（可以对照“方法学”一词）。")]),v._v(" "),i("p",[v._v("在编程世界中，我们需要处理好两件事：")]),v._v(" "),i("ul",[i("li",[v._v("第一件事是编程语言中的类型问题。")]),v._v(" "),i("li",[v._v("第二件事是对真实世界中业务代码的抽象、重用和拼装")])]),v._v(" "),i("p",[v._v("类型检查系统：")]),v._v(" "),i("ul",[i("li",[v._v("静态类型检查是在编译器进行语义分析时进行的")]),v._v(" "),i("li",[v._v("动态类型检查系统更多的是在运行期做动态类型标记和检查相关")])]),v._v(" "),i("h3",{attrs:{id:"函数式编程"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#函数式编程"}},[v._v("#")]),v._v(" 函数式编程")]),v._v(" "),i("p",[v._v("函数式编程有以下特征：")]),v._v(" "),i("ul",[i("li",[i("code",[v._v("stateless")]),v._v("：函数不维护任何状态。函数式编程的核心精神是 stateless，简而言之就是它不能存在状态，你给我数据我处理完扔出来，里面的数据是不变的。")]),v._v(" "),i("li",[i("code",[v._v("immutable")]),v._v("：输入数据是不能动的，动了输入数据就有危险，所以要返回新的数据集。")])]),v._v(" "),i("p",[v._v("函数式编程的优势：")]),v._v(" "),i("ul",[i("li",[v._v("没有状态就没有伤害。")]),v._v(" "),i("li",[v._v("并行执行无伤害。")]),v._v(" "),i("li",[v._v("Copy-Paste 重构代码无伤害。")]),v._v(" "),i("li",[v._v("函数的执行没有顺序上的问题。")])]),v._v(" "),i("p",[v._v("函数式编程的其他好处：")]),v._v(" "),i("ul",[i("li",[v._v("惰性求值")]),v._v(" "),i("li",[v._v("准确性")])]),v._v(" "),i("p",[v._v("递归的精髓是描述问题")]),v._v(" "),i("h3",{attrs:{id:"面向对象"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#面向对象"}},[v._v("#")]),v._v(" 面向对象")]),v._v(" "),i("p",[v._v("面向对象的三大特性：继承、封装、多态")]),v._v(" "),i("p",[v._v("二十三个经典设计摩丝的核心概念：")]),v._v(" "),i("ul",[i("li",[v._v("\"Program to an 'interface', not am 'implementation'\"")]),v._v(" "),i("li",[v._v("\"Favor 'object composition' over 'class inheritance'\"")])])])}),[],!1,null,null,null);_.default=a.exports}}]);