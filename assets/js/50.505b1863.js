(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{343:function(s,a,n){"use strict";n.r(a);var t=n(6),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"gradle-使用阿里镜像"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gradle-使用阿里镜像"}},[s._v("#")]),s._v(" Gradle 使用阿里镜像")]),s._v(" "),n("p",[s._v("在"),n("code",[s._v("build.gradle")]),s._v("文件中加入如下配置：")]),s._v(" "),n("div",{staticClass:"language-groovy line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[s._v("repositories "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    maven "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("url "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'http://maven.aliyun.com/nexus/content/groups/public/'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h2",{attrs:{id:"对list中的数据进行验证"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#对list中的数据进行验证"}},[s._v("#")]),s._v(" 对"),n("code",[s._v("List")]),s._v("中的数据进行验证")]),s._v(" "),n("p",[s._v("如果只是要求"),n("code",[s._v("List")]),s._v("中必须有值，使用"),n("code",[s._v("@Min")]),s._v("注解就行，如果还需要对其中的元素进行验证，还需要使用"),n("code",[s._v("@Valid")]),s._v("进行验证传递")]),s._v(" "),n("h2",{attrs:{id:"feign-from-的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#feign-from-的使用"}},[s._v("#")]),s._v(" Feign From 的使用")]),s._v(" "),n("p",[s._v("建立一个"),n("code",[s._v("feign")]),s._v("的配置文件，并在其中写入如下代码：")]),s._v(" "),n("div",{staticClass:"language-kotlin line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation builtin"}},[s._v("@Bean")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fun")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("encoder")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Encoder "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("FormEncoder")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("然后在请求到接口上加入"),n("code",[s._v("consumes = [MediaType.APPLICATION_FORM_URLENCODED_VALUE]")]),s._v("，\n对于请求到参数，使用"),n("code",[s._v("model")]),s._v("进行封装，然后使用"),n("code",[s._v("map")]),s._v("封装请求参数")]),s._v(" "),n("h2",{attrs:{id:"feign-在-spring-boot-2-0-中提示错误"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#feign-在-spring-boot-2-0-中提示错误"}},[s._v("#")]),s._v(" feign 在 spring boot 2.0 中提示错误")]),s._v(" "),n("p",[s._v("当使用 "),n("code",[s._v("Spring boot 2.0")]),s._v(" 的时候，idea 会提示无法注入，这个时候在"),n("code",[s._v("client")]),s._v("中加入\n"),n("code",[s._v("@Component")]),s._v("注解就可以了")]),s._v(" "),n("h2",{attrs:{id:"自动注入冲突"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自动注入冲突"}},[s._v("#")]),s._v(" 自动注入冲突")]),s._v(" "),n("p",[s._v("在使用"),n("code",[s._v("Spring boot 2.0")]),s._v("的时候，有可能会出现多个自动配置到"),n("code",[s._v("Bean")]),s._v("冲突到情况，这个\n时候可以将不需要注入到"),n("code",[s._v("Bean")]),s._v("加入到"),n("code",[s._v("spring.autoconfigure.exclude")]),s._v("中就可以了，例如\n"),n("code",[s._v("consul")]),s._v("和"),n("code",[s._v("kubernetes")]),s._v("冲突到情况，可以用如下设置：")]),s._v(" "),n("div",{staticClass:"language-yaml line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spring")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("autoconfigure")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("exclude")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" org.springframework.cloud.kubernetes.discovery.KubernetesDiscoveryClientAutoConfiguratio\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h2",{attrs:{id:"lombok-在-ide-提示报错到情况"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lombok-在-ide-提示报错到情况"}},[s._v("#")]),s._v(" lombok 在 IDE 提示报错到情况")]),s._v(" "),n("p",[s._v("当出现 lombok 报错的时候，在 peferences -> build -> annotation processors 中设置")]),s._v(" "),n("h2",{attrs:{id:"feign-的-name-同名提示报错"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#feign-的-name-同名提示报错"}},[s._v("#")]),s._v(" feign 的 name 同名提示报错")]),s._v(" "),n("p",[s._v("当在"),n("code",[s._v("Spring boot 2.0")]),s._v("使用"),n("code",[s._v("feign")]),s._v("的时候，使用"),n("code",[s._v("Bean")]),s._v("提示如下错误：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Description:\n\nThe bean Bean 的名称，defined in null, could not be registered. A bean with that name has already been defined in null and overriding is disabled.\n\nAction:\n\nConsider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=tru\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("此时，可以考虑如下两个解决办法：")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("在配置文件中加入运行使用同名"),n("code",[s._v("Bean")]),s._v("的配置")]),s._v(" "),n("div",{staticClass:"language-yaml line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spring")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("allow-bean-definition-overriding")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("true")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("将每个"),n("code",[s._v("Bean")]),s._v("配置成不同的名称")])])]),s._v(" "),n("h2",{attrs:{id:"java-和-kotlin-类型不兼容"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#java-和-kotlin-类型不兼容"}},[s._v("#")]),s._v(" Java 和 Kotlin 类型不兼容")]),s._v(" "),n("p",[s._v("在使用 spring data redis 允许 lua 脚本的时候会出现返回值是 Int，然后在 kotlin 中出现了类型不兼容的情况，这是因为 kotlin 中的 Long 指向的是 Java 中的 long，并且在接口上做了不可以为空判定，大部分情况下是可以兼容的，但是 spring 框架类中使用了反射强制获取了 Java 中的 Long 类型，也就是在获取包装类型的情况下，只能强制指定返回的类型为包装类习惯，这是因为在不指定的话默认的类型转换是不可空的，如下")]),s._v(" "),n("div",{staticClass:"language-kotlin line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[s._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lang"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Long\njava"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lang"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Long"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("java\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h2",{attrs:{id:"简单的分布式锁的实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#简单的分布式锁的实现"}},[s._v("#")]),s._v(" 简单的分布式锁的实现")]),s._v(" "),n("p",[s._v("实现分布式锁最简单的方式就是在 reids 中执行 lua 脚本，因为 lua 是单进程执行的，在不是集群部署的情况下实现一个分布式锁或者进行分布式限流相对来说是比较简单的。当在系统部署的时候使用了集群的方式，应该考虑的是数据在每个 slot 中同步的问题，一个简单的解决办法是在少数节点只进行写入操作，在多数节点进行写操作。在 spring 中，使用 spring data redis 对大部分的 redis 操作进行了封装，并且可以在使用集群的情况下设置写入节点和读取节点，然后在其中对数据进行处理，所有的后续操作都要等到 redis 中的数据真实有效变更后才能进行后续操作")]),s._v(" "),n("h2",{attrs:{id:"git-重置所有提交记录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#git-重置所有提交记录"}},[s._v("#")]),s._v(" Git 重置所有提交记录")]),s._v(" "),n("p",[s._v("基本思想是新建一个分支，然后把本地的 master 分支删了，然后重命名当前分支，具体操作如\n下：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 新建分支")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout --orphan latest_branch\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进行提交")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" -A\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -am "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commit message"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除 master 分支")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -D master\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重命名当前分支")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -m master\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 按需进行强制提交")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push -f origin master\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h2",{attrs:{id:"consul-和-kubernetes-同时使用时候冲突的解决"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#consul-和-kubernetes-同时使用时候冲突的解决"}},[s._v("#")]),s._v(" Consul 和 Kubernetes 同时使用时候冲突的解决")]),s._v(" "),n("p",[n("code",[s._v("Spring boot")]),s._v("的一个功能就是提供了大量的自动配置，当多种同类型的自动配置进行加载的时候，就会出现冲突，继而导致应用不能启动，这个时候就需要在系统中根据不同的环境加载不同的配置文件，"),n("code",[s._v("Spring boot")]),s._v("提供了不加载某些自动配置的配置项，下面以不加载"),n("code",[s._v("Consul")]),s._v("，而使用"),n("code",[s._v("Kubernetes")]),s._v("为例：")]),s._v(" "),n("div",{staticClass:"language-yml line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-yml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spring")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("autoconfigure")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("exclude")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" org.springframework.cloud.consul.serviceregistry.ConsulAutoServiceRegistrationAutoConfiguration\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h2",{attrs:{id:"spring-boot-2-actuator-显示所有-bean"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot-2-actuator-显示所有-bean"}},[s._v("#")]),s._v(" Spring boot 2 Actuator 显示所有 bean")]),s._v(" "),n("p",[s._v("在配置文件中加如如下配置：")]),s._v(" "),n("div",{staticClass:"language-yml line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-yml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("management")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("endpoint")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("beans")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("enabled")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("true")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("endpoints")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("web")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("exposure")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("include")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);