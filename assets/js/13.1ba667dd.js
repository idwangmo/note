(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{242:function(_,v,t){_.exports=t.p+"assets/img/scrum-test.a31a1d93.png"},243:function(_,v,t){_.exports=t.p+"assets/img/cdc-test.405e6a6b.png"},244:function(_,v,t){_.exports=t.p+"assets/img/sso-gateway.fefca195.png"},317:function(_,v,t){"use strict";t.r(v);var a=t(6),s=Object(a.a)({},(function(){var _=this,v=_.$createElement,a=_._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[a("p",[a("em",[_._v("如何寻找平衡")])]),_._v(" "),a("h2",{attrs:{id:"第一章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一章"}},[_._v("#")]),_._v(" 第一章")]),_._v(" "),a("h3",{attrs:{id:"微服务定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#微服务定义"}},[_._v("#")]),_._v(" 微服务定义")]),_._v(" "),a("ol",[a("li",[_._v("很小，专注于做好一件事情\n"),a("ul",[a("li",[_._v("内聚性是指将相关代码放在一起")]),_._v(" "),a("li",[_._v("根据业务大边界来确定服务大边界")]),_._v(" "),a("li",[_._v("服务能够和团队相匹配")])])]),_._v(" "),a("li",[_._v("自治性")])]),_._v(" "),a("h3",{attrs:{id:"微服务大好处"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#微服务大好处"}},[_._v("#")]),_._v(" 微服务大好处")]),_._v(" "),a("ol",[a("li",[_._v("技术异构性")]),_._v(" "),a("li",[_._v("弹性")]),_._v(" "),a("li",[_._v("扩展")]),_._v(" "),a("li",[_._v("简化部署")]),_._v(" "),a("li",[_._v("与组织结构相匹配")]),_._v(" "),a("li",[_._v("可组合性")]),_._v(" "),a("li",[_._v("对可替代性大优化")])]),_._v(" "),a("p",[_._v("服务与服务之间可以并且应该大量使用第三方库来重用公共代码，但有时候效果不太好")]),_._v(" "),a("h2",{attrs:{id:"第二章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二章"}},[_._v("#")]),_._v(" 第二章")]),_._v(" "),a("p",[_._v("人们试图通过大量的图表和文档创建出一个完美的方案，而忽略了很多基础性的未知因素")]),_._v(" "),a("h4",{attrs:{id:"一个原则性的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一个原则性的方法"}},[_._v("#")]),_._v(" 一个原则性的方法")]),_._v(" "),a("ol",[a("li",[_._v("战略目标")]),_._v(" "),a("li",[_._v("原则")]),_._v(" "),a("li",[_._v("实践：实践应该巩固原则")]),_._v(" "),a("li",[_._v("将原则和实践相结合")])]),_._v(" "),a("p",[_._v("日志功能和监控功能都需要集中式管理")]),_._v(" "),a("p",[_._v("一个运行异常的服务可能会毁了整个系统，所以必须保证每个服务都可以应对下游服务的错误请求")]),_._v(" "),a("p",[_._v("对以下几种请求做不同的处理可以帮助系统及时失败，并且也很容易追溯问题：")]),_._v(" "),a("ol",[a("li",[_._v("正常且被正确处理大请求")]),_._v(" "),a("li",[_._v("错误请求，并且服务识别出了它是错误的，但什么都没做")]),_._v(" "),a("li",[_._v("被房屋的服务宕机了，所以无法判断请求是否正常")])]),_._v(" "),a("p",[a("strong",[_._v("治理")]),_._v("通过评估干系人的需求、当前情况及下一步的可能性来确保企业目标的达成，通过排优先级和做决策来设定方向。对于已经达成一致的方向和目标进行监督。")]),_._v(" "),a("h3",{attrs:{id:"演进式架构师应该承担的职责"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#演进式架构师应该承担的职责"}},[_._v("#")]),_._v(" 演进式架构师应该承担的职责")]),_._v(" "),a("ul",[a("li",[_._v("愿景")]),_._v(" "),a("li",[_._v("同理心")]),_._v(" "),a("li",[_._v("合作")]),_._v(" "),a("li",[_._v("适应性")]),_._v(" "),a("li",[_._v("自治性")]),_._v(" "),a("li",[_._v("治理")])]),_._v(" "),a("h2",{attrs:{id:"第三章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三章"}},[_._v("#")]),_._v(" 第三章")]),_._v(" "),a("p",[_._v("当考虑微服务的边界时，首先考虑比较大的、粗粒度的那些上下文，然后当发现合适的缝隙后，再进一步划分出那些嵌套的上下文。")]),_._v(" "),a("p",[_._v("修改系统的目的是为了满足业务需求")]),_._v(" "),a("h2",{attrs:{id:"第四章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第四章"}},[_._v("#")]),_._v(" 第四章")]),_._v(" "),a("h3",{attrs:{id:"理想大集成技术"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#理想大集成技术"}},[_._v("#")]),_._v(" 理想大集成技术")]),_._v(" "),a("ol",[a("li",[_._v("避免破坏性修改")]),_._v(" "),a("li",[_._v("保证 API 的技术无关性")]),_._v(" "),a("li",[_._v("服务易于消费方使用")]),_._v(" "),a("li",[_._v("隐藏内部实现细节")])]),_._v(" "),a("p",[a("code",[_._v("PRC")]),_._v("的核心思想是隐藏远程调用大复杂性。")]),_._v(" "),a("p",[_._v("使用"),a("code",[_._v("RPC")]),_._v("需要注意不要对远程调用过度抽象，以至于网络因素完全被隐藏起来；确保可以独立大升级服务端接口而不用强迫客户端升级，所以在编写客户端代码时要注意这方面大平衡；在客户端中一定不要隐藏我们是在做网络调用这个事实。")]),_._v(" "),a("p",[_._v("尽量让中间件保持简单，而把业务逻辑放在自己的服务中")]),_._v(" "),a("p",[_._v("在微服务内部不要违反 DRY，但在跨服务的情况下可以适当违反 DRY")]),_._v(" "),a("p",[_._v("想要使用客户端库，一定要保证其中只包含处理底层传输协议的代码")]),_._v(" "),a("h3",{attrs:{id:"版本管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本管理"}},[_._v("#")]),_._v(" 版本管理")]),_._v(" "),a("ol",[a("li",[_._v("尽可能推迟")]),_._v(" "),a("li",[_._v("及早发现破坏性修改")]),_._v(" "),a("li",[_._v("使用语义化的版本管理")]),_._v(" "),a("li",[_._v("不同大接口共存")]),_._v(" "),a("li",[_._v("同时使用多个版本的服务")])]),_._v(" "),a("p",[_._v("最大程度地保证微服务之间的低耦合：")]),_._v(" "),a("ul",[a("li",[_._v("无论如何避免数据库集成")]),_._v(" "),a("li",[_._v("理解 REST 和 RPC 之间的取舍，但总是使用 REST 作为请求 / 响应模式的起点")]),_._v(" "),a("li",[_._v("相比编排，优先选择协同")]),_._v(" "),a("li",[_._v("避免破坏性修改、理解 Postel 法则、使用容错性读取器")]),_._v(" "),a("li",[_._v("将用户界面视为一个组合层")])]),_._v(" "),a("h2",{attrs:{id:"第五章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第五章"}},[_._v("#")]),_._v(" 第五章")]),_._v(" "),a("p",[_._v("限界上下文就是一个非常好的接缝，因为它的定义就是组织内高内聚和低耦合的边界")]),_._v(" "),a("h3",{attrs:{id:"部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[_._v("#")]),_._v(" 部署")]),_._v(" "),a("p",[_._v("是否理解 CI 的三个问题：")]),_._v(" "),a("ul",[a("li",[_._v("是否每天签入代码到主线")]),_._v(" "),a("li",[_._v("是否有一组测试来验证修改")]),_._v(" "),a("li",[_._v("当构建失败后，团队是否把修复 CI 当作第一优先级的事情来做")])]),_._v(" "),a("p",[_._v("使用 OS 特定构建物的好处是，在做部署时不需要考虑底层使用的是什么技术。只需要简单使用内置的工具就可以完成软件的安装")]),_._v(" "),a("p",[a("img",{attrs:{src:t(242),alt:"Scrum 测试金子塔"}}),_._v("_")]),_._v(" "),a("h3",{attrs:{id:"测试分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试分类"}},[_._v("#")]),_._v(" 测试分类")]),_._v(" "),a("ol",[a("li",[_._v("单元测试")]),_._v(" "),a("li",[_._v("服务测试")]),_._v(" "),a("li",[_._v("端到端测试")])]),_._v(" "),a("p",[_._v("测试场景，而是故事（scrum 中的 stroy）")]),_._v(" "),a("p",[a("img",{attrs:{src:t(243),alt:"契约测试场景金字塔"}})]),_._v(" "),a("h2",{attrs:{id:"第八章-监控"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第八章-监控"}},[_._v("#")]),_._v(" 第八章 监控")]),_._v(" "),a("p",[_._v("对每个服务而言：")]),_._v(" "),a("ul",[a("li",[_._v("最低限度要跟踪请求响应时间。做好之后，可以开始跟踪错误率及应用程序级的指标。")]),_._v(" "),a("li",[_._v("最低限度要跟踪所有下游服务的健康状态，包括下游调用的响应时间，最好能够跟踪错误率。一些像 Hystrix 这样的库，可以在这方面提供帮助。")]),_._v(" "),a("li",[_._v("标准化如何收集指标以及存储指标。")]),_._v(" "),a("li",[_._v("如果可能的话，以标准的格式将日志记录到一个标准的位置。如果每个服务各自使用不同的方式，聚合会非常痛苦！")]),_._v(" "),a("li",[_._v("监控底层操作系统，这样你就可以跟踪流氓进程和进行容量规划。")])]),_._v(" "),a("p",[_._v("对系统而言：")]),_._v(" "),a("ul",[a("li",[_._v("聚合 CPU 之类的主机层级的指标及应用程序级指标。")]),_._v(" "),a("li",[_._v("确保你选用的指标存储工具可以在系统和服务级别做聚合，同时也允许你查看单台主机的情况。")]),_._v(" "),a("li",[_._v("确保指标存储工具允许你维护数据足够长的时间，以了解你的系统的趋势。")]),_._v(" "),a("li",[_._v("使用单个可查询工具来对日志进行聚合和存储。")]),_._v(" "),a("li",[_._v("强烈考虑标准化关联标识的使用。")]),_._v(" "),a("li",[_._v("了解什么样的情况需要行动，并根据这些信息构造相应的警报和仪表盘。")]),_._v(" "),a("li",[_._v("调查对各种指标聚合方式做统一化的可能性，像 Suro 或 Riemann 这样的工具可能会对 你有用。")])]),_._v(" "),a("h2",{attrs:{id:"第九章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第九章"}},[_._v("#")]),_._v(" 第九章")]),_._v(" "),a("p",[a("img",{attrs:{src:t(244),alt:"单点网关登录"}})]),_._v(" "),a("p",[a("strong",[_._v("不要实现自己的加密算法。不要发明自己的安全协议")])]),_._v(" "),a("h3",{attrs:{id:"身份验证和授权"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#身份验证和授权"}},[_._v("#")]),_._v(" 身份验证和授权")]),_._v(" "),a("ol",[a("li",[_._v("单点登录")]),_._v(" "),a("li",[_._v("网关单点登录")]),_._v(" "),a("li",[_._v("细粒度的授权")])]),_._v(" "),a("h3",{attrs:{id:"服务间的身份验证和授权"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务间的身份验证和授权"}},[_._v("#")]),_._v(" 服务间的身份验证和授权")]),_._v(" "),a("ol",[a("li",[_._v("在边界内允许一切")]),_._v(" "),a("li",[_._v("HTTP(s) 基本身份验证")]),_._v(" "),a("li",[_._v("使用"),a("code",[_._v("SAML")]),_._v("或"),a("code",[_._v("OpenID")])]),_._v(" "),a("li",[_._v("客户端证书")]),_._v(" "),a("li",[a("code",[_._v("HTTP")]),_._v("之上的"),a("code",[_._v("HMAC")])]),_._v(" "),a("li",[_._v("API 密钥")]),_._v(" "),a("li",[_._v("代理")])]),_._v(" "),a("h3",{attrs:{id:"静态数据的安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态数据的安全"}},[_._v("#")]),_._v(" 静态数据的安全")]),_._v(" "),a("ol",[a("li",[_._v("使用众所周知的加密算法")]),_._v(" "),a("li",[_._v("按需解密")]),_._v(" "),a("li",[_._v("加密备份")])]),_._v(" "),a("h3",{attrs:{id:"深度防御"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深度防御"}},[_._v("#")]),_._v(" 深度防御")]),_._v(" "),a("ol",[a("li",[_._v("防火墙")]),_._v(" "),a("li",[_._v("日志")]),_._v(" "),a("li",[_._v("入侵检测")])]),_._v(" "),a("h2",{attrs:{id:"第十章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第十章"}},[_._v("#")]),_._v(" 第十章")]),_._v(" "),a("p",[a("strong",[_._v("康威定则")]),_._v("：任何组织在设计一套系统（广义概念上的系统）时，所交付的设计方案在结构上都与该组织的沟通结构保持一致。")]),_._v(" "),a("h3",{attrs:{id:"共享服务的原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#共享服务的原因"}},[_._v("#")]),_._v(" 共享服务的原因")]),_._v(" "),a("ol",[a("li",[_._v("难以分割")]),_._v(" "),a("li",[_._v("特性团队")]),_._v(" "),a("li",[_._v("交付瓶颈")])]),_._v(" "),a("h2",{attrs:{id:"第十一章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第十一章"}},[_._v("#")]),_._v(" 第十一章")]),_._v(" "),a("p",[_._v("规模化后，需要假定故障毁发生，并为故障进行准备，那么这样就会作出不同的权衡")])])}),[],!1,null,null,null);v.default=s.exports}}]);